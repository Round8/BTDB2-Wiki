{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Bloons TD Battles 2 Wiki \ud83c\udf88 Let's get hacking \ud83c\udf88 A repository of tools and information for modding Bloons TD Battles 2 About The Index The BTDB2 Wiki is a community-maintained website created for the purpose of compiling resources, documenting file formats, and various other resources for Bloons TD Battles 2. The goal is to have a vast array of game knowledge all condensed into one area for easy reference and viewing. Repository Layout Source : Contains source code for the tools in this repository. docs : Contains the documentation you're looking at right now. docs/files/template : Specifications for various file formats. (010 Hex Editor Templates) Contact Us This repository is maintained by some of the folks from the Rush Reborn Discord server. Credits, Attributions Header icon made by Prosymbols from www.flaticon.com","title":"Home"},{"location":"index.html#about-the-index","text":"The BTDB2 Wiki is a community-maintained website created for the purpose of compiling resources, documenting file formats, and various other resources for Bloons TD Battles 2. The goal is to have a vast array of game knowledge all condensed into one area for easy reference and viewing.","title":"About The Index"},{"location":"index.html#repository-layout","text":"Source : Contains source code for the tools in this repository. docs : Contains the documentation you're looking at right now. docs/files/template : Specifications for various file formats. (010 Hex Editor Templates)","title":"Repository Layout"},{"location":"index.html#contact-us","text":"This repository is maintained by some of the folks from the Rush Reborn Discord server.","title":"Contact Us"},{"location":"index.html#credits-attributions","text":"Header icon made by Prosymbols from www.flaticon.com","title":"Credits, Attributions"},{"location":"resources.html","text":"Essentials Resource Author Description Repository/Download Battles2Lua (B2L) Vadmeme Mod API Link Base Mod Various Helper, required Link Mods Get them from the Rush Reborn Discord server !","title":"Resources"},{"location":"resources.html#essentials","text":"Resource Author Description Repository/Download Battles2Lua (B2L) Vadmeme Mod API Link Base Mod Various Helper, required Link","title":"Essentials"},{"location":"resources.html#mods","text":"Get them from the Rush Reborn Discord server !","title":"Mods"},{"location":"files/formats.html","text":"File Formats == STUB ARTICLE == This is a complete list of all file formats used by files stored directly in the Data folder. Extension Format Example Tool Specification Example File Description Note: Shown tools are only examples, lists of tools for working with each file type belong in the Tools section.","title":"Formats"},{"location":"files/formats.html#file-formats","text":"== STUB ARTICLE == This is a complete list of all file formats used by files stored directly in the Data folder. Extension Format Example Tool Specification Example File Description Note: Shown tools are only examples, lists of tools for working with each file type belong in the Tools section.","title":"File Formats"},{"location":"files/list.html","text":"File Listing Note: Uses uncompressed sizes for Riders Archives. File Size Format Description","title":"File Listing"},{"location":"files/list.html#file-listing","text":"Note: Uses uncompressed sizes for Riders Archives. File Size Format Description","title":"File Listing"},{"location":"guides/contributing-locally.html","text":"Contributing to the Index: Locally Tutorial You should learn the basics of git , an easy way is to give GitHub Desktop (Tutorial) a go. It's only 15 minutes \ud83d\ude00. Create a GitHub account. Fork this repository: This will create a copy of the repository on your own user account, which you will be able to edit. Clone this repository. For example, using GitHub Desktop: Make changes inside the docs folder. Consider using a Markdown Cheat Sheet if you are new to markdown. I recommend using a markdown editor such as Typora . Personally I use Visual Studio Code , which has built-in markdown support and preview available ( Ctrl+Shift+P -> Markdown: Open Preview ). Commit the changes and push to GitHub. Open a Pull Request . Opening a Pull Request will allow us to review your changes before adding them with the main official page. If everything's good, we'll hit the merge button and add your changes to the official repository. Website Live Preview If you are working on the Index locally, you can generate a live preview the full website. Here's a quick guide of how you could do it from your command prompt (cmd). Install Python 3 If you have winget installed, or Windows 11, you can do this from the command prompt. winget install Python.Python.3 Otherwise download Python 3 from the official website. Install Material for MkDocs (Python package) # Restart your command prompt before running this command. pip install mkdocs-material Open a command prompt in the Index folder and run the site locally. # Move to Index folder. cd <Replace this with full path to your Index folder> mkdocs serve Copy the address to your web browser and enjoy the live preview; any changes you save will be shown instantly.","title":"Contributing to the Index: Locally"},{"location":"guides/contributing-locally.html#contributing-to-the-index-locally","text":"","title":"Contributing to the Index: Locally"},{"location":"guides/contributing-locally.html#tutorial","text":"You should learn the basics of git , an easy way is to give GitHub Desktop (Tutorial) a go. It's only 15 minutes \ud83d\ude00. Create a GitHub account. Fork this repository: This will create a copy of the repository on your own user account, which you will be able to edit. Clone this repository. For example, using GitHub Desktop: Make changes inside the docs folder. Consider using a Markdown Cheat Sheet if you are new to markdown. I recommend using a markdown editor such as Typora . Personally I use Visual Studio Code , which has built-in markdown support and preview available ( Ctrl+Shift+P -> Markdown: Open Preview ). Commit the changes and push to GitHub. Open a Pull Request . Opening a Pull Request will allow us to review your changes before adding them with the main official page. If everything's good, we'll hit the merge button and add your changes to the official repository.","title":"Tutorial"},{"location":"guides/contributing-locally.html#website-live-preview","text":"If you are working on the Index locally, you can generate a live preview the full website. Here's a quick guide of how you could do it from your command prompt (cmd). Install Python 3 If you have winget installed, or Windows 11, you can do this from the command prompt. winget install Python.Python.3 Otherwise download Python 3 from the official website. Install Material for MkDocs (Python package) # Restart your command prompt before running this command. pip install mkdocs-material Open a command prompt in the Index folder and run the site locally. # Move to Index folder. cd <Replace this with full path to your Index folder> mkdocs serve Copy the address to your web browser and enjoy the live preview; any changes you save will be shown instantly.","title":"Website Live Preview"},{"location":"guides/contributing-online.html","text":"Contributing to the Index: Online (If you want to work purely in your web browser, recommended for small changes only) Create a GitHub Account. Fork this repository: This will create a copy of the repository on your own user account, which you will be able to edit. Open the docs folder and edit the relevant (.md) pages. Consider using a Markdown Cheat Sheet for your editing needs. Open a Pull Request . Opening a Pull Request will allow us to review your changes before adding them with the main official page. If everything's good, we'll hit the merge button and add your changes to the official repository.","title":"Contributing to the Index: Online"},{"location":"guides/contributing-online.html#contributing-to-the-index-online","text":"(If you want to work purely in your web browser, recommended for small changes only) Create a GitHub Account. Fork this repository: This will create a copy of the repository on your own user account, which you will be able to edit. Open the docs folder and edit the relevant (.md) pages. Consider using a Markdown Cheat Sheet for your editing needs. Open a Pull Request . Opening a Pull Request will allow us to review your changes before adding them with the main official page. If everything's good, we'll hit the merge button and add your changes to the official repository.","title":"Contributing to the Index: Online"},{"location":"guides/mod-guide.html","text":"The Mod Guide Hello hello! This page will break down how to get mods up and running, by platform, so you can get toying with Battles 2. Currently, the only supported platforms are Windows and Linux. Support will likely never come for any other platform. Windows Download the mod API from here . Throw the file into the Battles 2 folder. By default, it should be in Program Files (x86)\\Steam\\steamapps\\common\\Bloons TD Battles 2 . If you installed Steam to another location, then you'll have to figure out the location yourself. Create a folder named mods in the Battles 2 folder. Download the base mod from here and extract it in the mods folder that you just created. Download some mods! You can get them from the Rush Reborn Discord server . Make sure you extract them in the mods folder just like the base mod, otherwise they will not work. Have fun! Linux Follow steps 1-5 in the Windows guide. Install protontricks if you haven't already. On Arch, for example, you can find it in the protontricks package in the AUR. Launch the Protontricks GUI with the protontricks --gui command. Select Battles 2, then select \"Select the default wineprefix\", then select \"Run winecfg\". Go to the \"Libraries\" section, then select \"wininet\" under the \"New override for library\" dropdown. Click \"Add\", then click \"OK\". Have fun!","title":"Mod Guide"},{"location":"guides/mod-guide.html#the-mod-guide","text":"Hello hello! This page will break down how to get mods up and running, by platform, so you can get toying with Battles 2. Currently, the only supported platforms are Windows and Linux. Support will likely never come for any other platform.","title":"The Mod Guide"},{"location":"guides/mod-guide.html#windows","text":"Download the mod API from here . Throw the file into the Battles 2 folder. By default, it should be in Program Files (x86)\\Steam\\steamapps\\common\\Bloons TD Battles 2 . If you installed Steam to another location, then you'll have to figure out the location yourself. Create a folder named mods in the Battles 2 folder. Download the base mod from here and extract it in the mods folder that you just created. Download some mods! You can get them from the Rush Reborn Discord server . Make sure you extract them in the mods folder just like the base mod, otherwise they will not work. Have fun!","title":"Windows"},{"location":"guides/mod-guide.html#linux","text":"Follow steps 1-5 in the Windows guide. Install protontricks if you haven't already. On Arch, for example, you can find it in the protontricks package in the AUR. Launch the Protontricks GUI with the protontricks --gui command. Select Battles 2, then select \"Select the default wineprefix\", then select \"Run winecfg\". Go to the \"Libraries\" section, then select \"wininet\" under the \"New override for library\" dropdown. Click \"Add\", then click \"OK\". Have fun!","title":"Linux"},{"location":"tools/index.html","text":"Tools == STUB ARTICLE == Please refer to the formats page for more information about each of the formats. Building the Tools Some of the tools mentioned are contained in this repository. To compile them, you will need the following: - .NET 5 SDK To compile them, clone this repository and the submodules ( git clone --recurse-submodules ) and simply go to the Source folder and run the BuildTools.ps1 script in Powershell. When the process completes, there will be a Build folder created in the same directory. If you wish to contribute to the tools and are not familiar with C# or the .NET platform, I would recommend installing Visual Studio for development.","title":"Tools"},{"location":"tools/index.html#tools","text":"== STUB ARTICLE == Please refer to the formats page for more information about each of the formats.","title":"Tools"},{"location":"tools/index.html#building-the-tools","text":"Some of the tools mentioned are contained in this repository. To compile them, you will need the following: - .NET 5 SDK To compile them, clone this repository and the submodules ( git clone --recurse-submodules ) and simply go to the Source folder and run the BuildTools.ps1 script in Powershell. When the process completes, there will be a Build folder created in the same directory. If you wish to contribute to the tools and are not familiar with C# or the .NET platform, I would recommend installing Visual Studio for development.","title":"Building the Tools"}]}